{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","ApplicationException","NegociacaoService","constructor","_http","obtemNegociacoesDaSemana","get","then","dados","negociacoes","map","objeto","Date","data","quantidade","valor","err","Error","obtemNegociacoesDaSemanaAnterior","obtemNegociacoesDaSemanaRetrasada","obtemNegociacoesDoPeriodo","periodo","Promise","all","reduce","novoArray","item","concat","sort","a","b","getTime","console","log"],"mappings":";;;;;;AAASA,c,sBAAAA,W;;AACAC,a,iBAAAA,U;;AACAC,uB,+BAAAA,oB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAEIC,iB,GAAN,MAAMA,iBAAN,CAAwB;AAC9BC,kBAAc;AACb,UAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb;AACA;;AAEDM,+BAA2B;AAC1B,YAAO,KAAKD,KAAL,CACLE,GADK,CACD,oBADC,EAELC,IAFK,CAGLC,SAAS;AACR,YAAMC,cAAcD,MAAME,GAAN,CAAUC,UAAU,IAAIX,UAAJ,CAAe,IAAIY,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAApB;AACA,aAAON,WAAP;AACA,MANI,EAOLO,OAAO;AACN,YAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACA,MATI,CAAP;AAWA;;AAEDC,uCAAmC;AAClC,YAAO,KAAKd,KAAL,CACLE,GADK,CACD,sBADC,EAELC,IAFK,CAGLC,SAAS;AACR,YAAMC,cAAcD,MAAME,GAAN,CAAUC,UAAU,IAAIX,UAAJ,CAAe,IAAIY,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAApB;AACA,aAAON,WAAP;AACA,MANI,EAOLO,OAAO;AACN,YAAM,IAAIC,KAAJ,CAAU,0DAAV,CAAN;AACA,MATI,CAAP;AAWA;;AAEDE,wCAAoC;AACnC,YAAO,KAAKf,KAAL,CACLE,GADK,CACD,uBADC,EAELC,IAFK,CAGLC,SAAS;AACR,YAAMC,cAAcD,MAAME,GAAN,CAAUC,UAAU,IAAIX,UAAJ,CAAe,IAAIY,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAApB;AACA,aAAON,WAAP;AACA,MANI,EAOLO,OAAO;AACN,YAAM,IAAIC,KAAJ,CAAU,2DAAV,CAAN;AACA,MATI,CAAP;AAWA;;AAEKG,6BAAN,GAAkC;AAAA;;AAAA;AACjC,UAAI;AACH,WAAIC,UAAU,MAAMC,QAAQC,GAAR,CAAY,CAC/B,MAAKlB,wBAAL,EAD+B,EAE/B,MAAKa,gCAAL,EAF+B,EAG/B,MAAKC,iCAAL,EAH+B,CAAZ,CAApB;AAKA,cAAOE,QACLG,MADK,CACE,UAACC,SAAD,EAAYC,IAAZ;AAAA,eAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CAArB;AAAA,QADF,EAC+C,EAD/C,EAELE,IAFK,CAEA,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUA,EAAEjB,IAAF,CAAOkB,OAAP,KAAmBF,EAAEhB,IAAF,CAAOkB,OAAP,EAA7B;AAAA,QAFA,CAAP;AAGA,OATD,CASE,OAAOf,GAAP,EAAY;AACbgB,eAAQC,GAAR,CAAYjB,GAAZ;AACA,aAAM,IAAIf,oBAAJ,CAAyB,kDAAzB,CAAN;AACA;AAbgC;AAcjC;AA7D6B,I","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from \"../../util/HttpService.js\";\nimport { Negociacao } from \"./Negociacao.js\";\nimport { ApplicationException } from \"../../util/ApplicationException.js\";\n\nexport class NegociacaoService {\n\tconstructor() {\n\t\tthis._http = new HttpService();\n\t}\n\n\tobtemNegociacoesDaSemana() {\n\t\treturn this._http\n\t\t\t.get(\"negociacoes/semana\")\n\t\t\t.then(\n\t\t\t\tdados => {\n\t\t\t\t\tconst negociacoes = dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n\t\t\t\t\treturn negociacoes;\n\t\t\t\t},\n\t\t\t\terr => {\n\t\t\t\t\tthrow new Error(\"Não foi possível obter as negociações\");\n\t\t\t\t}\n\t\t\t)\n\t}\n\n\tobtemNegociacoesDaSemanaAnterior() {\n\t\treturn this._http\n\t\t\t.get(\"negociacoes/anterior\")\n\t\t\t.then(\n\t\t\t\tdados => {\n\t\t\t\t\tconst negociacoes = dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n\t\t\t\t\treturn negociacoes;\n\t\t\t\t},\n\t\t\t\terr => {\n\t\t\t\t\tthrow new Error(\"Não foi possível obter as negociações da semana anterior\");\n\t\t\t\t}\n\t\t\t)\n\t}\n\n\tobtemNegociacoesDaSemanaRetrasada() {\n\t\treturn this._http\n\t\t\t.get(\"negociacoes/retrasada\")\n\t\t\t.then(\n\t\t\t\tdados => {\n\t\t\t\t\tconst negociacoes = dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n\t\t\t\t\treturn negociacoes;\n\t\t\t\t},\n\t\t\t\terr => {\n\t\t\t\t\tthrow new Error(\"Não foi possível obter as negociações da semana retrasada\");\n\t\t\t\t}\n\t\t\t)\n\t}\n\n\tasync obtemNegociacoesDoPeriodo() {\n\t\ttry {\n\t\t\tlet periodo = await Promise.all([\n\t\t\t\tthis.obtemNegociacoesDaSemana(),\n\t\t\t\tthis.obtemNegociacoesDaSemanaAnterior(),\n\t\t\t\tthis.obtemNegociacoesDaSemanaRetrasada()\n\t\t\t]);\n\t\t\treturn periodo\n\t\t\t\t.reduce((novoArray, item) => novoArray.concat(item), [])\n\t\t\t\t.sort((a, b) => b.data.getTime() - a.data.getTime());\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tthrow new ApplicationException(\"Não foi possível obter as negociações do período\");\n\t\t}\n\t}\n}"]}